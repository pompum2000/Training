((null)) 2022-07-11 09:53:34,665 INFO Training.Controllers.NhanViensController - Thêm nhân viên thành công!:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[Training.Models.NhanVien] 
(<log4net.Error>Exception rendering object type [Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[Training.Models.NhanVien, Training, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]]<stackTrace>System.ObjectDisposedException: Cannot access a disposed context instance. A common cause of this error is disposing a context instance that was resolved from dependency injection and then later trying to use the same context instance elsewhere in your application. This may occur if you are calling 'Dispose' on the context instance, or wrapping it in a using statement. If you are using dependency injection, you should let the dependency injection container take care of disposing context instances.
Object name: 'DataContext'.
   at Microsoft.EntityFrameworkCore.DbContext.CheckDisposed()
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.get_QueryProvider()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CreateEntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.NonCapturingLazyInitializer.EnsureInitialized[TParam,TValue](TValue& target, TParam param, Func`2 valueFactory)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Collections.IEnumerable.GetEnumerator()
   at log4net.ObjectRenderer.DefaultRenderer.RenderObject(RendererMap rendererMap, Object obj, TextWriter writer)
   at log4net.ObjectRenderer.RendererMap.FindAndRender(Object obj, TextWriter writer)</stackTrace></log4net.Error>) 2022-07-11 09:53:47,949 INFO Training.Controllers.NhanViensController - Xóa thành công!:11 
